package com.example.testeAPISigaBem;

//import org.jboss.jandex.Main;

//import java.util.Date;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.client.RestTemplate;
import java.time.LocalDate;


@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private OutputRepository OutputRepository;

  @PostMapping(path="/add") // Map ONLY POST Requestss
  public @ResponseBody String addNewOutput (@RequestParam double vlTotalFrete
      , @RequestParam String dataPrevistaEntrega , @RequestParam String cepOrigem , 
      @RequestParam String cepDestino, @RequestParam double peso, @RequestParam String nomeDestinatario, 
      @RequestParam String dataConsulta) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    MainOutput n = new MainOutput(vlTotalFrete, dataPrevistaEntrega, cepOrigem, cepDestino, peso, nomeDestinatario, dataConsulta);

    OutputRepository.save(n);
    return "Saved";
  }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<MainOutput> getAllUsers() {
    // This returns a JSON or XML with the users
    return OutputRepository.findAll();
  }

  @PostMapping(path="/index")
  public @ResponseBody  MainOutput RegraDeNegocio (double peso, String cepOrigem, String cepDestino, String nomeDestinatario ){
  RestTemplate restTemplate = new RestTemplate();

  Frete frete = new Frete(); 
  MainOutput output = new MainOutput(); 
  frete.origem = restTemplate.getForObject(String.format("https://viacep.com.br/ws/%s/json/", cepOrigem) , Localizacao.class);
  frete.destino = restTemplate.getForObject(String.format("https://viacep.com.br/ws/%s/json/", cepDestino) , Localizacao.class);;
  frete.nomeDestinatario = nomeDestinatario;

 
LocalDate data = LocalDate.now();
int qtdDias;

      frete.peso = peso;
      double vlPeso = 1;

          if (frete.origem.ddd.equals(frete.destino.ddd)){
              
              frete.vlTotalFrete = (frete.peso * vlPeso) * 0.5;  
              qtdDias = 1;
              frete.dataPrevistaEntrega = data.plusDays(qtdDias).toString();


          }else if (frete.origem.uf.equals(frete.destino.uf) ){

              frete.vlTotalFrete = (frete.peso * vlPeso) * 0.25;
              qtdDias = 3;
              frete.dataPrevistaEntrega = data.plusDays(qtdDias).toString();

          }else if (!frete.origem.uf.equals(frete.destino.uf)){

              frete.vlTotalFrete = (frete.peso * vlPeso);
              qtdDias = 10;
              frete.dataPrevistaEntrega = data.plusDays(qtdDias).toString();

          }


              output.vlTotalFrete = frete.vlTotalFrete;
              output.dataPrevistaEntrega = frete.dataPrevistaEntrega;
              output.cepDestino = frete.destino.cep;
              output.cepOrigem = frete.origem.cep;
              output.peso = frete.peso;
              output.nomeDestinatario = frete.nomeDestinatario;
              output.dataConsulta = data.toString();



              
            addNewOutput(output.vlTotalFrete, output.dataPrevistaEntrega, output.cepOrigem, output.cepDestino, 
            output.peso, output.nomeDestinatario, output.dataConsulta);


return output;

}

}